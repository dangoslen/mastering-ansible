---
- hosts: loadbalancer
  become: true
  gather_facts: false
  tasks:
    - name: Verify nginx is running
      command: service nginx status
      changed_when: false

    - name: Verify nginx is listening on 80
      wait_for: port=80 timeout=1

- hosts: webserver
  become: true
  gather_facts: false
  tasks:
    - name: Verify apache is running
      command: service apache2 status
      changed_when: false

    - name: Verify apache2 is listening on 80
      wait_for: port=80 timeout=1

- hosts: database
  become: true
  tasks:
    - name: Verify mysql is running
      command: service mysql status
      changed_when: false

    - name: Verify mysql is listening on 3306
      wait_for: host={{ ansible_eth1.ipv4.address }} port=3306 timeout=1

- hosts: control
  gather_facts: false
  tasks:
     - name: Verify end-to-end index response
       uri: url=http://{{item}} return_content=yes
       with_items: "{{groups.loadbalancer}}"
       register: lb_index

     - fail: msg="index failed to return content"
       when: "'Hello, from sunny' not in item.content"
       with_items: "{{lb_index.results}}"

     - name: Verify end-to-end database
       uri: url=http://{{item}}/db return_content=yes
       with_items: "{{groups.loadbalancer}}"
       register: lb_db

     - fail: msg="index failed to return content"
       when: "'Database Connected from' not in item.content"
       with_items: "{{lb_db.results}}"


- hosts: loadbalancer
  gather_facts: false
  tasks:
    - name: Verify backend response
      uri: url=http://{{item}} return_content=yes
      with_items: "{{groups.webserver}}"
      register: app_index

    - fail: msg="index failed to return content"
      when: "'Hello, from sunny {{item.item}}' not in item.content"
      with_items: "{{app_index.results}}"

    - name: Verify Database response
      uri: url=http://{{item}}/db return_content=yes
      with_items: "{{groups.webserver}}"
      register: app_db

    - fail: msg="index failed to return content"
      when: "'Database Connected from {{item.item}}' not in item.content"
      with_items: "{{app_db.results}}"
